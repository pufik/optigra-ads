<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.2.xsd
	">
	
	<security:http realm="Pablici API" use-expressions="true">
		<security:http-basic />
		<!--TODO: Should be changed when  security strategy will be approved -->
		<security:intercept-url pattern="/v1/authorize/**" method="GET"  access="permitAll"/>
		<security:intercept-url pattern="/v1/authorize/**" method="POST"  access="permitAll"/>
		<security:intercept-url pattern="/v1/user/**" method="POST"  access="permitAll"/>
		<!-- Device actions are not secured -->
		<security:intercept-url pattern="/v1/device/**" method="GET"  access="permitAll"/>
		<security:intercept-url pattern="/v1/device/**" method="POST"  access="permitAll"/>
		<security:intercept-url pattern="/v1/device/**" method="PUT"  access="permitAll"/>
		<security:intercept-url pattern="/v1/device/**" method="DELETE"  access="permitAll"/>
		<!-- Application's status check is not secured -->
		<security:intercept-url pattern="/v1/application/**/status" method="GET"  access="permitAll"/>
		
		<security:intercept-url pattern="/**"  access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<security:logout logout-url="/v1/logout" logout-success-url="/v1"/>
	</security:http>
	
	<security:authentication-manager >
		<security:authentication-provider ref="defaultAuthenticationProvider"/>
	</security:authentication-manager>
	
	<bean id="defaultAuthenticationProvider" class="org.optigra.ads.security.DefaultAuthenticationProvider" />
	
	<alias name="webSessionService" alias="sessionService"/>
	<bean  name="webSessionService" id="webSessionService" class="org.optigra.ads.security.session.WebSessionService">
		<property name="defaultUser" ref="anonymousUser" />
	</bean>
	
	<!-- Permission resolvers -->
	<alias name="ownerAdminPermissionResolver" alias="ownerPermission" />
	<alias name="transperentQueryPermissionResolver" alias="queryPermission" />
	
	<bean id="ownerAdminPermissionResolver" name="ownerAdminPermissionResolver" class="org.optigra.ads.security.permission.impl.AdminPermission">
		<property name="nextPermision">
			<bean class="org.optigra.ads.security.permission.impl.UserEntityPermission">
				<property name="nextPermision">
					<bean class="org.optigra.ads.security.permission.impl.OwnerPermission">
						<property name="nextPermision">
							<bean class="org.optigra.ads.security.permission.impl.DeniedPermission" />
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="transperentQueryPermissionResolver" name="transperentQueryPermissionResolver" class="org.optigra.ads.security.permission.impl.TransperentQueryPermission">
		<property name="nextPermision">
			<bean class="org.optigra.ads.security.permission.impl.AdminPermission">
				<property name="nextPermision">
					<bean class="org.optigra.ads.security.permission.impl.UserEntityEnhancementPermission">
						<property name="nextPermision">
							<bean class="org.optigra.ads.security.permission.impl.EntityOwnerEnhancementPermision" />
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<!-- Default system Users -->
	<bean name="anonymousUser" id="anonymousUser" class="org.optigra.ads.model.user.User">
		<property name="id" value="2" />
		<property name="login" value="anonymous" />
		<property name="password" value="" />
		<property name="role" value="ANONYMOUS" />
	</bean>
	
	<!-- Filters -->
	<bean id="corsFilter" name="corsFilter" class="org.optigra.ads.rest.web.filter.CorsFilter" />
	
</beans>
